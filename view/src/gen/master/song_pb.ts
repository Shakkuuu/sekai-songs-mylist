// @generated by protoc-gen-es v1.10.1 with parameter "target=ts"
// @generated from file master/song.proto (package master, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Artist } from "./artist_pb.js";
import { VocalPattern } from "./vocal_pattern_pb.js";
import { MusicVideoType } from "../enums/master_pb.js";

/**
 * Songs
 *
 * @generated from message master.Song
 */
export class Song extends Message<Song> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string kana = 3;
   */
  kana = "";

  /**
   * @generated from field: master.Artist lyrics = 4;
   */
  lyrics?: Artist;

  /**
   * @generated from field: master.Artist music = 5;
   */
  music?: Artist;

  /**
   * @generated from field: master.Artist arrangement = 6;
   */
  arrangement?: Artist;

  /**
   * @generated from field: string thumbnail = 7;
   */
  thumbnail = "";

  /**
   * @generated from field: string original_video = 8;
   */
  originalVideo = "";

  /**
   * @generated from field: google.protobuf.Timestamp release_time = 9;
   */
  releaseTime?: Timestamp;

  /**
   * @generated from field: bool deleted = 10;
   */
  deleted = false;

  /**
   * @generated from field: repeated master.VocalPattern vocal_patterns = 11;
   */
  vocalPatterns: VocalPattern[] = [];

  /**
   * @generated from field: repeated enums.MusicVideoType music_video_types = 12;
   */
  musicVideoTypes: MusicVideoType[] = [];

  constructor(data?: PartialMessage<Song>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "master.Song";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kana", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lyrics", kind: "message", T: Artist },
    { no: 5, name: "music", kind: "message", T: Artist },
    { no: 6, name: "arrangement", kind: "message", T: Artist },
    { no: 7, name: "thumbnail", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "original_video", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "release_time", kind: "message", T: Timestamp },
    { no: 10, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "vocal_patterns", kind: "message", T: VocalPattern, repeated: true },
    { no: 12, name: "music_video_types", kind: "enum", T: proto3.getEnumType(MusicVideoType), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Song {
    return new Song().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Song {
    return new Song().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Song {
    return new Song().fromJsonString(jsonString, options);
  }

  static equals(a: Song | PlainMessage<Song> | undefined, b: Song | PlainMessage<Song> | undefined): boolean {
    return proto3.util.equals(Song, a, b);
  }
}

