// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: vocal_pattern_singer.sql

package sqlcgen

import (
	"context"
	"database/sql"
)

const insertVocalPatternSinger = `-- name: InsertVocalPatternSinger :one
INSERT INTO vocal_pattern_singers (vocal_pattern_id, singer_id, position)
VALUES ($1, $2, $3)
RETURNING id, vocal_pattern_id, singer_id, position
`

type InsertVocalPatternSingerParams struct {
	VocalPatternID sql.NullInt32
	SingerID       sql.NullInt32
	Position       sql.NullInt32
}

func (q *Queries) InsertVocalPatternSinger(ctx context.Context, arg InsertVocalPatternSingerParams) (VocalPatternSinger, error) {
	row := q.db.QueryRowContext(ctx, insertVocalPatternSinger, arg.VocalPatternID, arg.SingerID, arg.Position)
	var i VocalPatternSinger
	err := row.Scan(
		&i.ID,
		&i.VocalPatternID,
		&i.SingerID,
		&i.Position,
	)
	return i, err
}
