// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: vocal_pattern.sql

package sqlcgen

import (
	"context"
	"database/sql"
)

const insertVocalPattern = `-- name: InsertVocalPattern :one
INSERT INTO vocal_patterns (song_id, name)
VALUES ($1, $2)
RETURNING id, song_id, name
`

type InsertVocalPatternParams struct {
	SongID sql.NullInt32
	Name   sql.NullString
}

func (q *Queries) InsertVocalPattern(ctx context.Context, arg InsertVocalPatternParams) (VocalPattern, error) {
	row := q.db.QueryRowContext(ctx, insertVocalPattern, arg.SongID, arg.Name)
	var i VocalPattern
	err := row.Scan(&i.ID, &i.SongID, &i.Name)
	return i, err
}
