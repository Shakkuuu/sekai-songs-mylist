// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: song_unit.sql

package sqlcgen

import (
	"context"
	"database/sql"
)

const insertSongUnit = `-- name: InsertSongUnit :one
INSERT INTO song_units (song_id, unit_id)
VALUES ($1, $2)
RETURNING id, song_id, unit_id
`

type InsertSongUnitParams struct {
	SongID sql.NullInt32
	UnitID sql.NullInt32
}

func (q *Queries) InsertSongUnit(ctx context.Context, arg InsertSongUnitParams) (SongUnit, error) {
	row := q.db.QueryRowContext(ctx, insertSongUnit, arg.SongID, arg.UnitID)
	var i SongUnit
	err := row.Scan(&i.ID, &i.SongID, &i.UnitID)
	return i, err
}
