// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: mylist/v1/mylist.proto

package mylistv1

import (
	enums "github.com/Shakkuuu/sekai-songs-mylist/internal/gen/enums"
	master "github.com/Shakkuuu/sekai-songs-mylist/internal/gen/master"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MyList
type MyList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Position      int32                  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyList) Reset() {
	*x = MyList{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyList) ProtoMessage() {}

func (x *MyList) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyList.ProtoReflect.Descriptor instead.
func (*MyList) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{0}
}

func (x *MyList) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyList) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MyList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MyList) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *MyList) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MyList) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// MyListChart
type MyListChart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MyListId      int32                  `protobuf:"varint,2,opt,name=my_list_id,json=myListId,proto3" json:"my_list_id,omitempty"`
	Chart         *master.Chart          `protobuf:"bytes,3,opt,name=chart,proto3" json:"chart,omitempty"`
	ClearType     enums.ClearType        `protobuf:"varint,4,opt,name=clear_type,json=clearType,proto3,enum=enums.ClearType" json:"clear_type,omitempty"`
	Memo          string                 `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyListChart) Reset() {
	*x = MyListChart{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyListChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyListChart) ProtoMessage() {}

func (x *MyListChart) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyListChart.ProtoReflect.Descriptor instead.
func (*MyListChart) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{1}
}

func (x *MyListChart) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyListChart) GetMyListId() int32 {
	if x != nil {
		return x.MyListId
	}
	return 0
}

func (x *MyListChart) GetChart() *master.Chart {
	if x != nil {
		return x.Chart
	}
	return nil
}

func (x *MyListChart) GetClearType() enums.ClearType {
	if x != nil {
		return x.ClearType
	}
	return enums.ClearType(0)
}

func (x *MyListChart) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *MyListChart) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MyListChart) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// MyListChartAttachment
type MyListChartAttachment struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MyListChartId  int32                  `protobuf:"varint,2,opt,name=my_list_chart_id,json=myListChartId,proto3" json:"my_list_chart_id,omitempty"`
	AttachmentType enums.AttachmentType   `protobuf:"varint,3,opt,name=attachment_type,json=attachmentType,proto3,enum=enums.AttachmentType" json:"attachment_type,omitempty"`
	FileUrl        string                 `protobuf:"bytes,4,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Caption        string                 `protobuf:"bytes,5,opt,name=caption,proto3" json:"caption,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MyListChartAttachment) Reset() {
	*x = MyListChartAttachment{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyListChartAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyListChartAttachment) ProtoMessage() {}

func (x *MyListChartAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyListChartAttachment.ProtoReflect.Descriptor instead.
func (*MyListChartAttachment) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{2}
}

func (x *MyListChartAttachment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyListChartAttachment) GetMyListChartId() int32 {
	if x != nil {
		return x.MyListChartId
	}
	return 0
}

func (x *MyListChartAttachment) GetAttachmentType() enums.AttachmentType {
	if x != nil {
		return x.AttachmentType
	}
	return enums.AttachmentType(0)
}

func (x *MyListChartAttachment) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *MyListChartAttachment) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *MyListChartAttachment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetMyListsByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListsByUserIDRequest) Reset() {
	*x = GetMyListsByUserIDRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListsByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListsByUserIDRequest) ProtoMessage() {}

func (x *GetMyListsByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListsByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetMyListsByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{3}
}

type GetMyListsByUserIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyLists       []*MyList              `protobuf:"bytes,1,rep,name=my_lists,json=myLists,proto3" json:"my_lists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListsByUserIDResponse) Reset() {
	*x = GetMyListsByUserIDResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListsByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListsByUserIDResponse) ProtoMessage() {}

func (x *GetMyListsByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListsByUserIDResponse.ProtoReflect.Descriptor instead.
func (*GetMyListsByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{4}
}

func (x *GetMyListsByUserIDResponse) GetMyLists() []*MyList {
	if x != nil {
		return x.MyLists
	}
	return nil
}

type CreateMyListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Position      int32                  `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMyListRequest) Reset() {
	*x = CreateMyListRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMyListRequest) ProtoMessage() {}

func (x *CreateMyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMyListRequest.ProtoReflect.Descriptor instead.
func (*CreateMyListRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMyListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMyListRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type CreateMyListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMyListResponse) Reset() {
	*x = CreateMyListResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMyListResponse) ProtoMessage() {}

func (x *CreateMyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMyListResponse.ProtoReflect.Descriptor instead.
func (*CreateMyListResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{6}
}

type ChangeMyListNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListNameRequest) Reset() {
	*x = ChangeMyListNameRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListNameRequest) ProtoMessage() {}

func (x *ChangeMyListNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListNameRequest.ProtoReflect.Descriptor instead.
func (*ChangeMyListNameRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeMyListNameRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeMyListNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChangeMyListNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListNameResponse) Reset() {
	*x = ChangeMyListNameResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListNameResponse) ProtoMessage() {}

func (x *ChangeMyListNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListNameResponse.ProtoReflect.Descriptor instead.
func (*ChangeMyListNameResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{8}
}

type ChangeMyListPositionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []int32                `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Position      []int32                `protobuf:"varint,2,rep,packed,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListPositionRequest) Reset() {
	*x = ChangeMyListPositionRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListPositionRequest) ProtoMessage() {}

func (x *ChangeMyListPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListPositionRequest.ProtoReflect.Descriptor instead.
func (*ChangeMyListPositionRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeMyListPositionRequest) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ChangeMyListPositionRequest) GetPosition() []int32 {
	if x != nil {
		return x.Position
	}
	return nil
}

type ChangeMyListPositionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListPositionResponse) Reset() {
	*x = ChangeMyListPositionResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListPositionResponse) ProtoMessage() {}

func (x *ChangeMyListPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListPositionResponse.ProtoReflect.Descriptor instead.
func (*ChangeMyListPositionResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{10}
}

type DeleteMyListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMyListRequest) Reset() {
	*x = DeleteMyListRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyListRequest) ProtoMessage() {}

func (x *DeleteMyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyListRequest.ProtoReflect.Descriptor instead.
func (*DeleteMyListRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMyListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMyListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMyListResponse) Reset() {
	*x = DeleteMyListResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyListResponse) ProtoMessage() {}

func (x *DeleteMyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyListResponse.ProtoReflect.Descriptor instead.
func (*DeleteMyListResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{12}
}

type GetMyListChartsByMyListIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyListId      int32                  `protobuf:"varint,1,opt,name=my_list_id,json=myListId,proto3" json:"my_list_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListChartsByMyListIDRequest) Reset() {
	*x = GetMyListChartsByMyListIDRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListChartsByMyListIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListChartsByMyListIDRequest) ProtoMessage() {}

func (x *GetMyListChartsByMyListIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListChartsByMyListIDRequest.ProtoReflect.Descriptor instead.
func (*GetMyListChartsByMyListIDRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{13}
}

func (x *GetMyListChartsByMyListIDRequest) GetMyListId() int32 {
	if x != nil {
		return x.MyListId
	}
	return 0
}

type GetMyListChartsByMyListIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyList        *MyList                `protobuf:"bytes,1,opt,name=my_list,json=myList,proto3" json:"my_list,omitempty"`
	MyListCharts  []*MyListChart         `protobuf:"bytes,2,rep,name=my_list_charts,json=myListCharts,proto3" json:"my_list_charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListChartsByMyListIDResponse) Reset() {
	*x = GetMyListChartsByMyListIDResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListChartsByMyListIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListChartsByMyListIDResponse) ProtoMessage() {}

func (x *GetMyListChartsByMyListIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListChartsByMyListIDResponse.ProtoReflect.Descriptor instead.
func (*GetMyListChartsByMyListIDResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{14}
}

func (x *GetMyListChartsByMyListIDResponse) GetMyList() *MyList {
	if x != nil {
		return x.MyList
	}
	return nil
}

func (x *GetMyListChartsByMyListIDResponse) GetMyListCharts() []*MyListChart {
	if x != nil {
		return x.MyListCharts
	}
	return nil
}

type GetMyListChartByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListChartByIDRequest) Reset() {
	*x = GetMyListChartByIDRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListChartByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListChartByIDRequest) ProtoMessage() {}

func (x *GetMyListChartByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListChartByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMyListChartByIDRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{15}
}

func (x *GetMyListChartByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMyListChartByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyListChart   *MyListChart           `protobuf:"bytes,1,opt,name=my_list_chart,json=myListChart,proto3" json:"my_list_chart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListChartByIDResponse) Reset() {
	*x = GetMyListChartByIDResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListChartByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListChartByIDResponse) ProtoMessage() {}

func (x *GetMyListChartByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListChartByIDResponse.ProtoReflect.Descriptor instead.
func (*GetMyListChartByIDResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{16}
}

func (x *GetMyListChartByIDResponse) GetMyListChart() *MyListChart {
	if x != nil {
		return x.MyListChart
	}
	return nil
}

type AddMyListChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyListId      int32                  `protobuf:"varint,1,opt,name=my_list_id,json=myListId,proto3" json:"my_list_id,omitempty"`
	ChartId       int32                  `protobuf:"varint,2,opt,name=chart_id,json=chartId,proto3" json:"chart_id,omitempty"`
	ClearType     enums.ClearType        `protobuf:"varint,3,opt,name=clear_type,json=clearType,proto3,enum=enums.ClearType" json:"clear_type,omitempty"`
	Memo          string                 `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMyListChartRequest) Reset() {
	*x = AddMyListChartRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMyListChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyListChartRequest) ProtoMessage() {}

func (x *AddMyListChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyListChartRequest.ProtoReflect.Descriptor instead.
func (*AddMyListChartRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{17}
}

func (x *AddMyListChartRequest) GetMyListId() int32 {
	if x != nil {
		return x.MyListId
	}
	return 0
}

func (x *AddMyListChartRequest) GetChartId() int32 {
	if x != nil {
		return x.ChartId
	}
	return 0
}

func (x *AddMyListChartRequest) GetClearType() enums.ClearType {
	if x != nil {
		return x.ClearType
	}
	return enums.ClearType(0)
}

func (x *AddMyListChartRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type AddMyListChartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMyListChartResponse) Reset() {
	*x = AddMyListChartResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMyListChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyListChartResponse) ProtoMessage() {}

func (x *AddMyListChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyListChartResponse.ProtoReflect.Descriptor instead.
func (*AddMyListChartResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{18}
}

type ChangeMyListChartClearTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClearType     enums.ClearType        `protobuf:"varint,2,opt,name=clear_type,json=clearType,proto3,enum=enums.ClearType" json:"clear_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListChartClearTypeRequest) Reset() {
	*x = ChangeMyListChartClearTypeRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListChartClearTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListChartClearTypeRequest) ProtoMessage() {}

func (x *ChangeMyListChartClearTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListChartClearTypeRequest.ProtoReflect.Descriptor instead.
func (*ChangeMyListChartClearTypeRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{19}
}

func (x *ChangeMyListChartClearTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeMyListChartClearTypeRequest) GetClearType() enums.ClearType {
	if x != nil {
		return x.ClearType
	}
	return enums.ClearType(0)
}

type ChangeMyListChartClearTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListChartClearTypeResponse) Reset() {
	*x = ChangeMyListChartClearTypeResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListChartClearTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListChartClearTypeResponse) ProtoMessage() {}

func (x *ChangeMyListChartClearTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListChartClearTypeResponse.ProtoReflect.Descriptor instead.
func (*ChangeMyListChartClearTypeResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{20}
}

type ChangeMyListChartMemoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Memo          string                 `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListChartMemoRequest) Reset() {
	*x = ChangeMyListChartMemoRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListChartMemoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListChartMemoRequest) ProtoMessage() {}

func (x *ChangeMyListChartMemoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListChartMemoRequest.ProtoReflect.Descriptor instead.
func (*ChangeMyListChartMemoRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{21}
}

func (x *ChangeMyListChartMemoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeMyListChartMemoRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type ChangeMyListChartMemoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMyListChartMemoResponse) Reset() {
	*x = ChangeMyListChartMemoResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMyListChartMemoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyListChartMemoResponse) ProtoMessage() {}

func (x *ChangeMyListChartMemoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyListChartMemoResponse.ProtoReflect.Descriptor instead.
func (*ChangeMyListChartMemoResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{22}
}

type DeleteMyListChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMyListChartRequest) Reset() {
	*x = DeleteMyListChartRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMyListChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyListChartRequest) ProtoMessage() {}

func (x *DeleteMyListChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyListChartRequest.ProtoReflect.Descriptor instead.
func (*DeleteMyListChartRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteMyListChartRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMyListChartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMyListChartResponse) Reset() {
	*x = DeleteMyListChartResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMyListChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyListChartResponse) ProtoMessage() {}

func (x *DeleteMyListChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyListChartResponse.ProtoReflect.Descriptor instead.
func (*DeleteMyListChartResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{24}
}

type GetMyListChartAttachmentsByMyListChartIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyListChartId int32                  `protobuf:"varint,1,opt,name=my_list_chart_id,json=myListChartId,proto3" json:"my_list_chart_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyListChartAttachmentsByMyListChartIDRequest) Reset() {
	*x = GetMyListChartAttachmentsByMyListChartIDRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListChartAttachmentsByMyListChartIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListChartAttachmentsByMyListChartIDRequest) ProtoMessage() {}

func (x *GetMyListChartAttachmentsByMyListChartIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListChartAttachmentsByMyListChartIDRequest.ProtoReflect.Descriptor instead.
func (*GetMyListChartAttachmentsByMyListChartIDRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{25}
}

func (x *GetMyListChartAttachmentsByMyListChartIDRequest) GetMyListChartId() int32 {
	if x != nil {
		return x.MyListChartId
	}
	return 0
}

type GetMyListChartAttachmentsByMyListChartIDResponse struct {
	state                  protoimpl.MessageState   `protogen:"open.v1"`
	MyListChart            *MyListChart             `protobuf:"bytes,1,opt,name=my_list_chart,json=myListChart,proto3" json:"my_list_chart,omitempty"`
	MyListChartAttachments []*MyListChartAttachment `protobuf:"bytes,2,rep,name=my_list_chart_attachments,json=myListChartAttachments,proto3" json:"my_list_chart_attachments,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetMyListChartAttachmentsByMyListChartIDResponse) Reset() {
	*x = GetMyListChartAttachmentsByMyListChartIDResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyListChartAttachmentsByMyListChartIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyListChartAttachmentsByMyListChartIDResponse) ProtoMessage() {}

func (x *GetMyListChartAttachmentsByMyListChartIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyListChartAttachmentsByMyListChartIDResponse.ProtoReflect.Descriptor instead.
func (*GetMyListChartAttachmentsByMyListChartIDResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{26}
}

func (x *GetMyListChartAttachmentsByMyListChartIDResponse) GetMyListChart() *MyListChart {
	if x != nil {
		return x.MyListChart
	}
	return nil
}

func (x *GetMyListChartAttachmentsByMyListChartIDResponse) GetMyListChartAttachments() []*MyListChartAttachment {
	if x != nil {
		return x.MyListChartAttachments
	}
	return nil
}

type AddMyListChartAttachmentRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MyListChartId  int32                  `protobuf:"varint,1,opt,name=my_list_chart_id,json=myListChartId,proto3" json:"my_list_chart_id,omitempty"`
	AttachmentType enums.AttachmentType   `protobuf:"varint,2,opt,name=attachment_type,json=attachmentType,proto3,enum=enums.AttachmentType" json:"attachment_type,omitempty"`
	FileUrl        string                 `protobuf:"bytes,3,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Caption        string                 `protobuf:"bytes,4,opt,name=caption,proto3" json:"caption,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddMyListChartAttachmentRequest) Reset() {
	*x = AddMyListChartAttachmentRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMyListChartAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyListChartAttachmentRequest) ProtoMessage() {}

func (x *AddMyListChartAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyListChartAttachmentRequest.ProtoReflect.Descriptor instead.
func (*AddMyListChartAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{27}
}

func (x *AddMyListChartAttachmentRequest) GetMyListChartId() int32 {
	if x != nil {
		return x.MyListChartId
	}
	return 0
}

func (x *AddMyListChartAttachmentRequest) GetAttachmentType() enums.AttachmentType {
	if x != nil {
		return x.AttachmentType
	}
	return enums.AttachmentType(0)
}

func (x *AddMyListChartAttachmentRequest) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *AddMyListChartAttachmentRequest) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

type AddMyListChartAttachmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMyListChartAttachmentResponse) Reset() {
	*x = AddMyListChartAttachmentResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMyListChartAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyListChartAttachmentResponse) ProtoMessage() {}

func (x *AddMyListChartAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyListChartAttachmentResponse.ProtoReflect.Descriptor instead.
func (*AddMyListChartAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{28}
}

type DeleteMyListChartAttachmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMyListChartAttachmentRequest) Reset() {
	*x = DeleteMyListChartAttachmentRequest{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMyListChartAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyListChartAttachmentRequest) ProtoMessage() {}

func (x *DeleteMyListChartAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyListChartAttachmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteMyListChartAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteMyListChartAttachmentRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMyListChartAttachmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMyListChartAttachmentResponse) Reset() {
	*x = DeleteMyListChartAttachmentResponse{}
	mi := &file_mylist_v1_mylist_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMyListChartAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyListChartAttachmentResponse) ProtoMessage() {}

func (x *DeleteMyListChartAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylist_v1_mylist_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyListChartAttachmentResponse.ProtoReflect.Descriptor instead.
func (*DeleteMyListChartAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_mylist_v1_mylist_proto_rawDescGZIP(), []int{30}
}

var File_mylist_v1_mylist_proto protoreflect.FileDescriptor

var file_mylist_v1_mylist_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x12, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6d, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x06, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x9b, 0x02, 0x0a, 0x0b, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x0a, 0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x80, 0x02,
	0x0a, 0x15, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x6d, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x3e, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x07, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a,
	0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x1a,
	0x02, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a,
	0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x42,
	0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x8d,
	0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x0e, 0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x0c, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x2b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x6d, 0x79, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0b, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x0a, 0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x10, 0x00,
	0x18, 0xa0, 0x8d, 0x06, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x21, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4f, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0x10, 0x00, 0x18, 0xa0, 0x8d, 0x06, 0x52, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x2f, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x10, 0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x30, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d,
	0x6d, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0b, 0x6d, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x6d, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x6d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x6d, 0x79, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x90, 0x4e,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72,
	0x06, 0x10, 0x01, 0x18, 0xa0, 0x8d, 0x06, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x22, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xec, 0x0b, 0x0a, 0x0d, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x6d, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6d,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e,
	0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x6d, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x6d,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x79, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x27, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x6d,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x49, 0x44, 0x12, 0x3a, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x6d, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7c, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53,
	0x68, 0x61, 0x6b, 0x6b, 0x75, 0x75, 0x75, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2d, 0x73, 0x6f,
	0x6e, 0x67, 0x73, 0x2d, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76,
	0x31, 0x3b, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_mylist_v1_mylist_proto_rawDescOnce sync.Once
	file_mylist_v1_mylist_proto_rawDescData []byte
)

func file_mylist_v1_mylist_proto_rawDescGZIP() []byte {
	file_mylist_v1_mylist_proto_rawDescOnce.Do(func() {
		file_mylist_v1_mylist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mylist_v1_mylist_proto_rawDesc), len(file_mylist_v1_mylist_proto_rawDesc)))
	})
	return file_mylist_v1_mylist_proto_rawDescData
}

var file_mylist_v1_mylist_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_mylist_v1_mylist_proto_goTypes = []any{
	(*MyList)(nil),                                           // 0: mylist.v1.MyList
	(*MyListChart)(nil),                                      // 1: mylist.v1.MyListChart
	(*MyListChartAttachment)(nil),                            // 2: mylist.v1.MyListChartAttachment
	(*GetMyListsByUserIDRequest)(nil),                        // 3: mylist.v1.GetMyListsByUserIDRequest
	(*GetMyListsByUserIDResponse)(nil),                       // 4: mylist.v1.GetMyListsByUserIDResponse
	(*CreateMyListRequest)(nil),                              // 5: mylist.v1.CreateMyListRequest
	(*CreateMyListResponse)(nil),                             // 6: mylist.v1.CreateMyListResponse
	(*ChangeMyListNameRequest)(nil),                          // 7: mylist.v1.ChangeMyListNameRequest
	(*ChangeMyListNameResponse)(nil),                         // 8: mylist.v1.ChangeMyListNameResponse
	(*ChangeMyListPositionRequest)(nil),                      // 9: mylist.v1.ChangeMyListPositionRequest
	(*ChangeMyListPositionResponse)(nil),                     // 10: mylist.v1.ChangeMyListPositionResponse
	(*DeleteMyListRequest)(nil),                              // 11: mylist.v1.DeleteMyListRequest
	(*DeleteMyListResponse)(nil),                             // 12: mylist.v1.DeleteMyListResponse
	(*GetMyListChartsByMyListIDRequest)(nil),                 // 13: mylist.v1.GetMyListChartsByMyListIDRequest
	(*GetMyListChartsByMyListIDResponse)(nil),                // 14: mylist.v1.GetMyListChartsByMyListIDResponse
	(*GetMyListChartByIDRequest)(nil),                        // 15: mylist.v1.GetMyListChartByIDRequest
	(*GetMyListChartByIDResponse)(nil),                       // 16: mylist.v1.GetMyListChartByIDResponse
	(*AddMyListChartRequest)(nil),                            // 17: mylist.v1.AddMyListChartRequest
	(*AddMyListChartResponse)(nil),                           // 18: mylist.v1.AddMyListChartResponse
	(*ChangeMyListChartClearTypeRequest)(nil),                // 19: mylist.v1.ChangeMyListChartClearTypeRequest
	(*ChangeMyListChartClearTypeResponse)(nil),               // 20: mylist.v1.ChangeMyListChartClearTypeResponse
	(*ChangeMyListChartMemoRequest)(nil),                     // 21: mylist.v1.ChangeMyListChartMemoRequest
	(*ChangeMyListChartMemoResponse)(nil),                    // 22: mylist.v1.ChangeMyListChartMemoResponse
	(*DeleteMyListChartRequest)(nil),                         // 23: mylist.v1.DeleteMyListChartRequest
	(*DeleteMyListChartResponse)(nil),                        // 24: mylist.v1.DeleteMyListChartResponse
	(*GetMyListChartAttachmentsByMyListChartIDRequest)(nil),  // 25: mylist.v1.GetMyListChartAttachmentsByMyListChartIDRequest
	(*GetMyListChartAttachmentsByMyListChartIDResponse)(nil), // 26: mylist.v1.GetMyListChartAttachmentsByMyListChartIDResponse
	(*AddMyListChartAttachmentRequest)(nil),                  // 27: mylist.v1.AddMyListChartAttachmentRequest
	(*AddMyListChartAttachmentResponse)(nil),                 // 28: mylist.v1.AddMyListChartAttachmentResponse
	(*DeleteMyListChartAttachmentRequest)(nil),               // 29: mylist.v1.DeleteMyListChartAttachmentRequest
	(*DeleteMyListChartAttachmentResponse)(nil),              // 30: mylist.v1.DeleteMyListChartAttachmentResponse
	(*timestamppb.Timestamp)(nil),                            // 31: google.protobuf.Timestamp
	(*master.Chart)(nil),                                     // 32: master.Chart
	(enums.ClearType)(0),                                     // 33: enums.ClearType
	(enums.AttachmentType)(0),                                // 34: enums.AttachmentType
}
var file_mylist_v1_mylist_proto_depIdxs = []int32{
	31, // 0: mylist.v1.MyList.created_at:type_name -> google.protobuf.Timestamp
	31, // 1: mylist.v1.MyList.updated_at:type_name -> google.protobuf.Timestamp
	32, // 2: mylist.v1.MyListChart.chart:type_name -> master.Chart
	33, // 3: mylist.v1.MyListChart.clear_type:type_name -> enums.ClearType
	31, // 4: mylist.v1.MyListChart.created_at:type_name -> google.protobuf.Timestamp
	31, // 5: mylist.v1.MyListChart.updated_at:type_name -> google.protobuf.Timestamp
	34, // 6: mylist.v1.MyListChartAttachment.attachment_type:type_name -> enums.AttachmentType
	31, // 7: mylist.v1.MyListChartAttachment.created_at:type_name -> google.protobuf.Timestamp
	0,  // 8: mylist.v1.GetMyListsByUserIDResponse.my_lists:type_name -> mylist.v1.MyList
	0,  // 9: mylist.v1.GetMyListChartsByMyListIDResponse.my_list:type_name -> mylist.v1.MyList
	1,  // 10: mylist.v1.GetMyListChartsByMyListIDResponse.my_list_charts:type_name -> mylist.v1.MyListChart
	1,  // 11: mylist.v1.GetMyListChartByIDResponse.my_list_chart:type_name -> mylist.v1.MyListChart
	33, // 12: mylist.v1.AddMyListChartRequest.clear_type:type_name -> enums.ClearType
	33, // 13: mylist.v1.ChangeMyListChartClearTypeRequest.clear_type:type_name -> enums.ClearType
	1,  // 14: mylist.v1.GetMyListChartAttachmentsByMyListChartIDResponse.my_list_chart:type_name -> mylist.v1.MyListChart
	2,  // 15: mylist.v1.GetMyListChartAttachmentsByMyListChartIDResponse.my_list_chart_attachments:type_name -> mylist.v1.MyListChartAttachment
	34, // 16: mylist.v1.AddMyListChartAttachmentRequest.attachment_type:type_name -> enums.AttachmentType
	3,  // 17: mylist.v1.MyListService.GetMyListsByUserID:input_type -> mylist.v1.GetMyListsByUserIDRequest
	5,  // 18: mylist.v1.MyListService.CreateMyList:input_type -> mylist.v1.CreateMyListRequest
	7,  // 19: mylist.v1.MyListService.ChangeMyListName:input_type -> mylist.v1.ChangeMyListNameRequest
	9,  // 20: mylist.v1.MyListService.ChangeMyListPosition:input_type -> mylist.v1.ChangeMyListPositionRequest
	11, // 21: mylist.v1.MyListService.DeleteMyList:input_type -> mylist.v1.DeleteMyListRequest
	13, // 22: mylist.v1.MyListService.GetMyListChartsByMyListID:input_type -> mylist.v1.GetMyListChartsByMyListIDRequest
	15, // 23: mylist.v1.MyListService.GetMyListChartByID:input_type -> mylist.v1.GetMyListChartByIDRequest
	17, // 24: mylist.v1.MyListService.AddMyListChart:input_type -> mylist.v1.AddMyListChartRequest
	19, // 25: mylist.v1.MyListService.ChangeMyListChartClearType:input_type -> mylist.v1.ChangeMyListChartClearTypeRequest
	21, // 26: mylist.v1.MyListService.ChangeMyListChartMemo:input_type -> mylist.v1.ChangeMyListChartMemoRequest
	23, // 27: mylist.v1.MyListService.DeleteMyListChart:input_type -> mylist.v1.DeleteMyListChartRequest
	25, // 28: mylist.v1.MyListService.GetMyListChartAttachmentsByMyListChartID:input_type -> mylist.v1.GetMyListChartAttachmentsByMyListChartIDRequest
	27, // 29: mylist.v1.MyListService.AddMyListChartAttachment:input_type -> mylist.v1.AddMyListChartAttachmentRequest
	29, // 30: mylist.v1.MyListService.DeleteMyListChartAttachment:input_type -> mylist.v1.DeleteMyListChartAttachmentRequest
	4,  // 31: mylist.v1.MyListService.GetMyListsByUserID:output_type -> mylist.v1.GetMyListsByUserIDResponse
	6,  // 32: mylist.v1.MyListService.CreateMyList:output_type -> mylist.v1.CreateMyListResponse
	8,  // 33: mylist.v1.MyListService.ChangeMyListName:output_type -> mylist.v1.ChangeMyListNameResponse
	10, // 34: mylist.v1.MyListService.ChangeMyListPosition:output_type -> mylist.v1.ChangeMyListPositionResponse
	12, // 35: mylist.v1.MyListService.DeleteMyList:output_type -> mylist.v1.DeleteMyListResponse
	14, // 36: mylist.v1.MyListService.GetMyListChartsByMyListID:output_type -> mylist.v1.GetMyListChartsByMyListIDResponse
	16, // 37: mylist.v1.MyListService.GetMyListChartByID:output_type -> mylist.v1.GetMyListChartByIDResponse
	18, // 38: mylist.v1.MyListService.AddMyListChart:output_type -> mylist.v1.AddMyListChartResponse
	20, // 39: mylist.v1.MyListService.ChangeMyListChartClearType:output_type -> mylist.v1.ChangeMyListChartClearTypeResponse
	22, // 40: mylist.v1.MyListService.ChangeMyListChartMemo:output_type -> mylist.v1.ChangeMyListChartMemoResponse
	24, // 41: mylist.v1.MyListService.DeleteMyListChart:output_type -> mylist.v1.DeleteMyListChartResponse
	26, // 42: mylist.v1.MyListService.GetMyListChartAttachmentsByMyListChartID:output_type -> mylist.v1.GetMyListChartAttachmentsByMyListChartIDResponse
	28, // 43: mylist.v1.MyListService.AddMyListChartAttachment:output_type -> mylist.v1.AddMyListChartAttachmentResponse
	30, // 44: mylist.v1.MyListService.DeleteMyListChartAttachment:output_type -> mylist.v1.DeleteMyListChartAttachmentResponse
	31, // [31:45] is the sub-list for method output_type
	17, // [17:31] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_mylist_v1_mylist_proto_init() }
func file_mylist_v1_mylist_proto_init() {
	if File_mylist_v1_mylist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mylist_v1_mylist_proto_rawDesc), len(file_mylist_v1_mylist_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mylist_v1_mylist_proto_goTypes,
		DependencyIndexes: file_mylist_v1_mylist_proto_depIdxs,
		MessageInfos:      file_mylist_v1_mylist_proto_msgTypes,
	}.Build()
	File_mylist_v1_mylist_proto = out.File
	file_mylist_v1_mylist_proto_goTypes = nil
	file_mylist_v1_mylist_proto_depIdxs = nil
}
