// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: master/master.proto

package master

import (
	enums "github.com/Shakkuuu/sekai-songs-mylist/internal/gen/enums"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Artist
type GetArtistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtistsRequest) Reset() {
	*x = GetArtistsRequest{}
	mi := &file_master_master_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistsRequest) ProtoMessage() {}

func (x *GetArtistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistsRequest.ProtoReflect.Descriptor instead.
func (*GetArtistsRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{0}
}

type GetArtistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*Artist              `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtistsResponse) Reset() {
	*x = GetArtistsResponse{}
	mi := &file_master_master_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistsResponse) ProtoMessage() {}

func (x *GetArtistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistsResponse.ProtoReflect.Descriptor instead.
func (*GetArtistsResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{1}
}

func (x *GetArtistsResponse) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

type GetArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtistRequest) Reset() {
	*x = GetArtistRequest{}
	mi := &file_master_master_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistRequest) ProtoMessage() {}

func (x *GetArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistRequest.ProtoReflect.Descriptor instead.
func (*GetArtistRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{2}
}

func (x *GetArtistRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetArtistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        *Artist                `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtistResponse) Reset() {
	*x = GetArtistResponse{}
	mi := &file_master_master_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistResponse) ProtoMessage() {}

func (x *GetArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistResponse.ProtoReflect.Descriptor instead.
func (*GetArtistResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{3}
}

func (x *GetArtistResponse) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

type CreateArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kana          string                 `protobuf:"bytes,2,opt,name=kana,proto3" json:"kana,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateArtistRequest) Reset() {
	*x = CreateArtistRequest{}
	mi := &file_master_master_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArtistRequest) ProtoMessage() {}

func (x *CreateArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArtistRequest.ProtoReflect.Descriptor instead.
func (*CreateArtistRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{4}
}

func (x *CreateArtistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateArtistRequest) GetKana() string {
	if x != nil {
		return x.Kana
	}
	return ""
}

type CreateArtistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateArtistResponse) Reset() {
	*x = CreateArtistResponse{}
	mi := &file_master_master_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArtistResponse) ProtoMessage() {}

func (x *CreateArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArtistResponse.ProtoReflect.Descriptor instead.
func (*CreateArtistResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{5}
}

// Singer
type GetSingersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingersRequest) Reset() {
	*x = GetSingersRequest{}
	mi := &file_master_master_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingersRequest) ProtoMessage() {}

func (x *GetSingersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingersRequest.ProtoReflect.Descriptor instead.
func (*GetSingersRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{6}
}

type GetSingersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Singers       []*Singer              `protobuf:"bytes,1,rep,name=singers,proto3" json:"singers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingersResponse) Reset() {
	*x = GetSingersResponse{}
	mi := &file_master_master_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingersResponse) ProtoMessage() {}

func (x *GetSingersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingersResponse.ProtoReflect.Descriptor instead.
func (*GetSingersResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{7}
}

func (x *GetSingersResponse) GetSingers() []*Singer {
	if x != nil {
		return x.Singers
	}
	return nil
}

type GetSingerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingerRequest) Reset() {
	*x = GetSingerRequest{}
	mi := &file_master_master_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingerRequest) ProtoMessage() {}

func (x *GetSingerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingerRequest.ProtoReflect.Descriptor instead.
func (*GetSingerRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{8}
}

func (x *GetSingerRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSingerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Singer        *Singer                `protobuf:"bytes,1,opt,name=singer,proto3" json:"singer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingerResponse) Reset() {
	*x = GetSingerResponse{}
	mi := &file_master_master_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingerResponse) ProtoMessage() {}

func (x *GetSingerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingerResponse.ProtoReflect.Descriptor instead.
func (*GetSingerResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{9}
}

func (x *GetSingerResponse) GetSinger() *Singer {
	if x != nil {
		return x.Singer
	}
	return nil
}

type CreateSingerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSingerRequest) Reset() {
	*x = CreateSingerRequest{}
	mi := &file_master_master_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSingerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingerRequest) ProtoMessage() {}

func (x *CreateSingerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingerRequest.ProtoReflect.Descriptor instead.
func (*CreateSingerRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSingerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateSingerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSingerResponse) Reset() {
	*x = CreateSingerResponse{}
	mi := &file_master_master_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSingerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingerResponse) ProtoMessage() {}

func (x *CreateSingerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingerResponse.ProtoReflect.Descriptor instead.
func (*CreateSingerResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{11}
}

// Unit
type GetUnitsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnitsRequest) Reset() {
	*x = GetUnitsRequest{}
	mi := &file_master_master_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnitsRequest) ProtoMessage() {}

func (x *GetUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnitsRequest.ProtoReflect.Descriptor instead.
func (*GetUnitsRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{12}
}

type GetUnitsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Units         []*Unit                `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnitsResponse) Reset() {
	*x = GetUnitsResponse{}
	mi := &file_master_master_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnitsResponse) ProtoMessage() {}

func (x *GetUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnitsResponse.ProtoReflect.Descriptor instead.
func (*GetUnitsResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{13}
}

func (x *GetUnitsResponse) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

type GetUnitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnitRequest) Reset() {
	*x = GetUnitRequest{}
	mi := &file_master_master_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnitRequest) ProtoMessage() {}

func (x *GetUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnitRequest.ProtoReflect.Descriptor instead.
func (*GetUnitRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{14}
}

func (x *GetUnitRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUnitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unit          *Unit                  `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnitResponse) Reset() {
	*x = GetUnitResponse{}
	mi := &file_master_master_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnitResponse) ProtoMessage() {}

func (x *GetUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnitResponse.ProtoReflect.Descriptor instead.
func (*GetUnitResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{15}
}

func (x *GetUnitResponse) GetUnit() *Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

type CreateUnitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUnitRequest) Reset() {
	*x = CreateUnitRequest{}
	mi := &file_master_master_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUnitRequest) ProtoMessage() {}

func (x *CreateUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUnitRequest.ProtoReflect.Descriptor instead.
func (*CreateUnitRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{16}
}

func (x *CreateUnitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateUnitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUnitResponse) Reset() {
	*x = CreateUnitResponse{}
	mi := &file_master_master_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUnitResponse) ProtoMessage() {}

func (x *CreateUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUnitResponse.ProtoReflect.Descriptor instead.
func (*CreateUnitResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{17}
}

// VocalPattern
// message GetVocalPatternsRequest {}
//
//	message GetVocalPatternsResponse {
//	  repeated master.VocalPattern vocal_patterns = 1;
//	}
//
//	message GetVocalPatternRequest {
//	  int32 id = 1;
//	}
//
//	message GetVocalPatternResponse {
//	  master.VocalPattern vocal_pattern = 1;
//	}
type CreateVocalPatternRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SongId          int32                  `protobuf:"varint,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SingerIds       []int32                `protobuf:"varint,3,rep,packed,name=singer_ids,json=singerIds,proto3" json:"singer_ids,omitempty"`
	SingerPositions []int32                `protobuf:"varint,4,rep,packed,name=singer_positions,json=singerPositions,proto3" json:"singer_positions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateVocalPatternRequest) Reset() {
	*x = CreateVocalPatternRequest{}
	mi := &file_master_master_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVocalPatternRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVocalPatternRequest) ProtoMessage() {}

func (x *CreateVocalPatternRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVocalPatternRequest.ProtoReflect.Descriptor instead.
func (*CreateVocalPatternRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{18}
}

func (x *CreateVocalPatternRequest) GetSongId() int32 {
	if x != nil {
		return x.SongId
	}
	return 0
}

func (x *CreateVocalPatternRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVocalPatternRequest) GetSingerIds() []int32 {
	if x != nil {
		return x.SingerIds
	}
	return nil
}

func (x *CreateVocalPatternRequest) GetSingerPositions() []int32 {
	if x != nil {
		return x.SingerPositions
	}
	return nil
}

type CreateVocalPatternResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVocalPatternResponse) Reset() {
	*x = CreateVocalPatternResponse{}
	mi := &file_master_master_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVocalPatternResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVocalPatternResponse) ProtoMessage() {}

func (x *CreateVocalPatternResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVocalPatternResponse.ProtoReflect.Descriptor instead.
func (*CreateVocalPatternResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{19}
}

// Song
type GetSongsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongsRequest) Reset() {
	*x = GetSongsRequest{}
	mi := &file_master_master_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongsRequest) ProtoMessage() {}

func (x *GetSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongsRequest.ProtoReflect.Descriptor instead.
func (*GetSongsRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{20}
}

type GetSongsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Songs         []*Song                `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongsResponse) Reset() {
	*x = GetSongsResponse{}
	mi := &file_master_master_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongsResponse) ProtoMessage() {}

func (x *GetSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongsResponse.ProtoReflect.Descriptor instead.
func (*GetSongsResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{21}
}

func (x *GetSongsResponse) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

type GetSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongRequest) Reset() {
	*x = GetSongRequest{}
	mi := &file_master_master_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongRequest) ProtoMessage() {}

func (x *GetSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongRequest.ProtoReflect.Descriptor instead.
func (*GetSongRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{22}
}

func (x *GetSongRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Song          *Song                  `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongResponse) Reset() {
	*x = GetSongResponse{}
	mi := &file_master_master_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongResponse) ProtoMessage() {}

func (x *GetSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongResponse.ProtoReflect.Descriptor instead.
func (*GetSongResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{23}
}

func (x *GetSongResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type CreateSongRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kana            string                 `protobuf:"bytes,2,opt,name=kana,proto3" json:"kana,omitempty"`
	LyricsId        int32                  `protobuf:"varint,3,opt,name=lyrics_id,json=lyricsId,proto3" json:"lyrics_id,omitempty"`
	MusicId         int32                  `protobuf:"varint,4,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
	ArrangementId   int32                  `protobuf:"varint,5,opt,name=arrangement_id,json=arrangementId,proto3" json:"arrangement_id,omitempty"`
	Thumbnail       string                 `protobuf:"bytes,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	OriginalVideo   string                 `protobuf:"bytes,7,opt,name=original_video,json=originalVideo,proto3" json:"original_video,omitempty"`
	ReleaseTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=release_time,json=releaseTime,proto3" json:"release_time,omitempty"`
	Deleted         bool                   `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
	UnitIds         []int32                `protobuf:"varint,10,rep,packed,name=unit_ids,json=unitIds,proto3" json:"unit_ids,omitempty"`
	MusicVideoTypes []enums.MusicVideoType `protobuf:"varint,11,rep,packed,name=music_video_types,json=musicVideoTypes,proto3,enum=enums.MusicVideoType" json:"music_video_types,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateSongRequest) Reset() {
	*x = CreateSongRequest{}
	mi := &file_master_master_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongRequest) ProtoMessage() {}

func (x *CreateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongRequest.ProtoReflect.Descriptor instead.
func (*CreateSongRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{24}
}

func (x *CreateSongRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSongRequest) GetKana() string {
	if x != nil {
		return x.Kana
	}
	return ""
}

func (x *CreateSongRequest) GetLyricsId() int32 {
	if x != nil {
		return x.LyricsId
	}
	return 0
}

func (x *CreateSongRequest) GetMusicId() int32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *CreateSongRequest) GetArrangementId() int32 {
	if x != nil {
		return x.ArrangementId
	}
	return 0
}

func (x *CreateSongRequest) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *CreateSongRequest) GetOriginalVideo() string {
	if x != nil {
		return x.OriginalVideo
	}
	return ""
}

func (x *CreateSongRequest) GetReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseTime
	}
	return nil
}

func (x *CreateSongRequest) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *CreateSongRequest) GetUnitIds() []int32 {
	if x != nil {
		return x.UnitIds
	}
	return nil
}

func (x *CreateSongRequest) GetMusicVideoTypes() []enums.MusicVideoType {
	if x != nil {
		return x.MusicVideoTypes
	}
	return nil
}

type CreateSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSongResponse) Reset() {
	*x = CreateSongResponse{}
	mi := &file_master_master_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongResponse) ProtoMessage() {}

func (x *CreateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongResponse.ProtoReflect.Descriptor instead.
func (*CreateSongResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{25}
}

// Chart
type GetChartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChartsRequest) Reset() {
	*x = GetChartsRequest{}
	mi := &file_master_master_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartsRequest) ProtoMessage() {}

func (x *GetChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartsRequest.ProtoReflect.Descriptor instead.
func (*GetChartsRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{26}
}

type GetChartsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charts        []*Chart               `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChartsResponse) Reset() {
	*x = GetChartsResponse{}
	mi := &file_master_master_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartsResponse) ProtoMessage() {}

func (x *GetChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartsResponse.ProtoReflect.Descriptor instead.
func (*GetChartsResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{27}
}

func (x *GetChartsResponse) GetCharts() []*Chart {
	if x != nil {
		return x.Charts
	}
	return nil
}

type GetChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChartRequest) Reset() {
	*x = GetChartRequest{}
	mi := &file_master_master_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartRequest) ProtoMessage() {}

func (x *GetChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartRequest.ProtoReflect.Descriptor instead.
func (*GetChartRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{28}
}

func (x *GetChartRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetChartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chart         *Chart                 `protobuf:"bytes,1,opt,name=chart,proto3" json:"chart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChartResponse) Reset() {
	*x = GetChartResponse{}
	mi := &file_master_master_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartResponse) ProtoMessage() {}

func (x *GetChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartResponse.ProtoReflect.Descriptor instead.
func (*GetChartResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{29}
}

func (x *GetChartResponse) GetChart() *Chart {
	if x != nil {
		return x.Chart
	}
	return nil
}

type CreateChartRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SongId         int32                  `protobuf:"varint,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	DifficultyType enums.DifficultyType   `protobuf:"varint,2,opt,name=difficulty_type,json=difficultyType,proto3,enum=enums.DifficultyType" json:"difficulty_type,omitempty"`
	Level          int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	ChartViewLink  string                 `protobuf:"bytes,4,opt,name=chart_view_link,json=chartViewLink,proto3" json:"chart_view_link,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateChartRequest) Reset() {
	*x = CreateChartRequest{}
	mi := &file_master_master_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChartRequest) ProtoMessage() {}

func (x *CreateChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChartRequest.ProtoReflect.Descriptor instead.
func (*CreateChartRequest) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{30}
}

func (x *CreateChartRequest) GetSongId() int32 {
	if x != nil {
		return x.SongId
	}
	return 0
}

func (x *CreateChartRequest) GetDifficultyType() enums.DifficultyType {
	if x != nil {
		return x.DifficultyType
	}
	return enums.DifficultyType(0)
}

func (x *CreateChartRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CreateChartRequest) GetChartViewLink() string {
	if x != nil {
		return x.ChartViewLink
	}
	return ""
}

type CreateChartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChartResponse) Reset() {
	*x = CreateChartResponse{}
	mi := &file_master_master_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChartResponse) ProtoMessage() {}

func (x *CreateChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_master_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChartResponse.ProtoReflect.Descriptor instead.
func (*CreateChartResponse) Descriptor() ([]byte, []int) {
	return file_master_master_proto_rawDescGZIP(), []int{31}
}

var File_master_master_proto protoreflect.FileDescriptor

var file_master_master_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x12, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x75, 0x6e, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x06, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04,
	0x6b, 0x61, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6b, 0x61, 0x6e, 0x61, 0x22, 0x16, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x07, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x52, 0x07, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x33, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x06,
	0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92,
	0x01, 0x06, 0x22, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x10, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0c, 0xfa,
	0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1c, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x05,
	0x73, 0x6f, 0x6e, 0x67, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6f,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x22, 0x82, 0x04, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6b, 0x61, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6b, 0x61,
	0x6e, 0x61, 0x12, 0x24, 0x0a, 0x09, 0x6c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e,
	0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x0d, 0x61,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06,
	0x22, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x50, 0x0a, 0x11, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x0f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x73, 0x6f,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x28, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0f,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x10, 0x64, 0x28, 0x01,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x56, 0x69, 0x65, 0x77, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xd9, 0x08, 0x0a, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x19, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x16, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f,
	0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x17,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12,
	0x18, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x12, 0x17, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a, 0x3a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x68, 0x61, 0x6b, 0x6b, 0x75,
	0x75, 0x75, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2d, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x2d, 0x6d,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_master_master_proto_rawDescOnce sync.Once
	file_master_master_proto_rawDescData []byte
)

func file_master_master_proto_rawDescGZIP() []byte {
	file_master_master_proto_rawDescOnce.Do(func() {
		file_master_master_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_master_master_proto_rawDesc), len(file_master_master_proto_rawDesc)))
	})
	return file_master_master_proto_rawDescData
}

var file_master_master_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_master_master_proto_goTypes = []any{
	(*GetArtistsRequest)(nil),          // 0: master.GetArtistsRequest
	(*GetArtistsResponse)(nil),         // 1: master.GetArtistsResponse
	(*GetArtistRequest)(nil),           // 2: master.GetArtistRequest
	(*GetArtistResponse)(nil),          // 3: master.GetArtistResponse
	(*CreateArtistRequest)(nil),        // 4: master.CreateArtistRequest
	(*CreateArtistResponse)(nil),       // 5: master.CreateArtistResponse
	(*GetSingersRequest)(nil),          // 6: master.GetSingersRequest
	(*GetSingersResponse)(nil),         // 7: master.GetSingersResponse
	(*GetSingerRequest)(nil),           // 8: master.GetSingerRequest
	(*GetSingerResponse)(nil),          // 9: master.GetSingerResponse
	(*CreateSingerRequest)(nil),        // 10: master.CreateSingerRequest
	(*CreateSingerResponse)(nil),       // 11: master.CreateSingerResponse
	(*GetUnitsRequest)(nil),            // 12: master.GetUnitsRequest
	(*GetUnitsResponse)(nil),           // 13: master.GetUnitsResponse
	(*GetUnitRequest)(nil),             // 14: master.GetUnitRequest
	(*GetUnitResponse)(nil),            // 15: master.GetUnitResponse
	(*CreateUnitRequest)(nil),          // 16: master.CreateUnitRequest
	(*CreateUnitResponse)(nil),         // 17: master.CreateUnitResponse
	(*CreateVocalPatternRequest)(nil),  // 18: master.CreateVocalPatternRequest
	(*CreateVocalPatternResponse)(nil), // 19: master.CreateVocalPatternResponse
	(*GetSongsRequest)(nil),            // 20: master.GetSongsRequest
	(*GetSongsResponse)(nil),           // 21: master.GetSongsResponse
	(*GetSongRequest)(nil),             // 22: master.GetSongRequest
	(*GetSongResponse)(nil),            // 23: master.GetSongResponse
	(*CreateSongRequest)(nil),          // 24: master.CreateSongRequest
	(*CreateSongResponse)(nil),         // 25: master.CreateSongResponse
	(*GetChartsRequest)(nil),           // 26: master.GetChartsRequest
	(*GetChartsResponse)(nil),          // 27: master.GetChartsResponse
	(*GetChartRequest)(nil),            // 28: master.GetChartRequest
	(*GetChartResponse)(nil),           // 29: master.GetChartResponse
	(*CreateChartRequest)(nil),         // 30: master.CreateChartRequest
	(*CreateChartResponse)(nil),        // 31: master.CreateChartResponse
	(*Artist)(nil),                     // 32: master.Artist
	(*Singer)(nil),                     // 33: master.Singer
	(*Unit)(nil),                       // 34: master.Unit
	(*Song)(nil),                       // 35: master.Song
	(*timestamppb.Timestamp)(nil),      // 36: google.protobuf.Timestamp
	(enums.MusicVideoType)(0),          // 37: enums.MusicVideoType
	(*Chart)(nil),                      // 38: master.Chart
	(enums.DifficultyType)(0),          // 39: enums.DifficultyType
}
var file_master_master_proto_depIdxs = []int32{
	32, // 0: master.GetArtistsResponse.artists:type_name -> master.Artist
	32, // 1: master.GetArtistResponse.artist:type_name -> master.Artist
	33, // 2: master.GetSingersResponse.singers:type_name -> master.Singer
	33, // 3: master.GetSingerResponse.singer:type_name -> master.Singer
	34, // 4: master.GetUnitsResponse.units:type_name -> master.Unit
	34, // 5: master.GetUnitResponse.unit:type_name -> master.Unit
	35, // 6: master.GetSongsResponse.songs:type_name -> master.Song
	35, // 7: master.GetSongResponse.song:type_name -> master.Song
	36, // 8: master.CreateSongRequest.release_time:type_name -> google.protobuf.Timestamp
	37, // 9: master.CreateSongRequest.music_video_types:type_name -> enums.MusicVideoType
	38, // 10: master.GetChartsResponse.charts:type_name -> master.Chart
	38, // 11: master.GetChartResponse.chart:type_name -> master.Chart
	39, // 12: master.CreateChartRequest.difficulty_type:type_name -> enums.DifficultyType
	0,  // 13: master.MasterService.GetArtists:input_type -> master.GetArtistsRequest
	2,  // 14: master.MasterService.GetArtist:input_type -> master.GetArtistRequest
	4,  // 15: master.MasterService.CreateArtist:input_type -> master.CreateArtistRequest
	6,  // 16: master.MasterService.GetSingers:input_type -> master.GetSingersRequest
	8,  // 17: master.MasterService.GetSinger:input_type -> master.GetSingerRequest
	10, // 18: master.MasterService.CreateSinger:input_type -> master.CreateSingerRequest
	12, // 19: master.MasterService.GetUnits:input_type -> master.GetUnitsRequest
	14, // 20: master.MasterService.GetUnit:input_type -> master.GetUnitRequest
	16, // 21: master.MasterService.CreateUnit:input_type -> master.CreateUnitRequest
	18, // 22: master.MasterService.CreateVocalPattern:input_type -> master.CreateVocalPatternRequest
	20, // 23: master.MasterService.GetSongs:input_type -> master.GetSongsRequest
	22, // 24: master.MasterService.GetSong:input_type -> master.GetSongRequest
	24, // 25: master.MasterService.CreateSong:input_type -> master.CreateSongRequest
	26, // 26: master.MasterService.GetCharts:input_type -> master.GetChartsRequest
	28, // 27: master.MasterService.GetChart:input_type -> master.GetChartRequest
	30, // 28: master.MasterService.CreateChart:input_type -> master.CreateChartRequest
	1,  // 29: master.MasterService.GetArtists:output_type -> master.GetArtistsResponse
	3,  // 30: master.MasterService.GetArtist:output_type -> master.GetArtistResponse
	5,  // 31: master.MasterService.CreateArtist:output_type -> master.CreateArtistResponse
	7,  // 32: master.MasterService.GetSingers:output_type -> master.GetSingersResponse
	9,  // 33: master.MasterService.GetSinger:output_type -> master.GetSingerResponse
	11, // 34: master.MasterService.CreateSinger:output_type -> master.CreateSingerResponse
	13, // 35: master.MasterService.GetUnits:output_type -> master.GetUnitsResponse
	15, // 36: master.MasterService.GetUnit:output_type -> master.GetUnitResponse
	17, // 37: master.MasterService.CreateUnit:output_type -> master.CreateUnitResponse
	19, // 38: master.MasterService.CreateVocalPattern:output_type -> master.CreateVocalPatternResponse
	21, // 39: master.MasterService.GetSongs:output_type -> master.GetSongsResponse
	23, // 40: master.MasterService.GetSong:output_type -> master.GetSongResponse
	25, // 41: master.MasterService.CreateSong:output_type -> master.CreateSongResponse
	27, // 42: master.MasterService.GetCharts:output_type -> master.GetChartsResponse
	29, // 43: master.MasterService.GetChart:output_type -> master.GetChartResponse
	31, // 44: master.MasterService.CreateChart:output_type -> master.CreateChartResponse
	29, // [29:45] is the sub-list for method output_type
	13, // [13:29] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_master_master_proto_init() }
func file_master_master_proto_init() {
	if File_master_master_proto != nil {
		return
	}
	file_master_artist_proto_init()
	file_master_chart_proto_init()
	file_master_singer_proto_init()
	file_master_song_proto_init()
	file_master_unit_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_master_master_proto_rawDesc), len(file_master_master_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_master_master_proto_goTypes,
		DependencyIndexes: file_master_master_proto_depIdxs,
		MessageInfos:      file_master_master_proto_msgTypes,
	}.Build()
	File_master_master_proto = out.File
	file_master_master_proto_goTypes = nil
	file_master_master_proto_depIdxs = nil
}
