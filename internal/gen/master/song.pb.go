// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: master/song.proto

package master

import (
	enums "github.com/Shakkuuu/sekai-songs-mylist/internal/gen/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Songs
type Song struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Kana            string                 `protobuf:"bytes,3,opt,name=kana,proto3" json:"kana,omitempty"`
	Lyrics          *Artist                `protobuf:"bytes,4,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Music           *Artist                `protobuf:"bytes,5,opt,name=music,proto3" json:"music,omitempty"`
	Arrangement     *Artist                `protobuf:"bytes,6,opt,name=arrangement,proto3" json:"arrangement,omitempty"`
	Thumbnail       string                 `protobuf:"bytes,7,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	OriginalVideo   string                 `protobuf:"bytes,8,opt,name=original_video,json=originalVideo,proto3" json:"original_video,omitempty"`
	ReleaseTime     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=release_time,json=releaseTime,proto3" json:"release_time,omitempty"`
	Deleted         bool                   `protobuf:"varint,10,opt,name=deleted,proto3" json:"deleted,omitempty"`
	VocalPatterns   []*VocalPattern        `protobuf:"bytes,11,rep,name=vocal_patterns,json=vocalPatterns,proto3" json:"vocal_patterns,omitempty"`
	MusicVideoTypes []enums.MusicVideoType `protobuf:"varint,12,rep,packed,name=music_video_types,json=musicVideoTypes,proto3,enum=enums.MusicVideoType" json:"music_video_types,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_master_song_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_master_song_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_master_song_proto_rawDescGZIP(), []int{0}
}

func (x *Song) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Song) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Song) GetKana() string {
	if x != nil {
		return x.Kana
	}
	return ""
}

func (x *Song) GetLyrics() *Artist {
	if x != nil {
		return x.Lyrics
	}
	return nil
}

func (x *Song) GetMusic() *Artist {
	if x != nil {
		return x.Music
	}
	return nil
}

func (x *Song) GetArrangement() *Artist {
	if x != nil {
		return x.Arrangement
	}
	return nil
}

func (x *Song) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Song) GetOriginalVideo() string {
	if x != nil {
		return x.OriginalVideo
	}
	return ""
}

func (x *Song) GetReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseTime
	}
	return nil
}

func (x *Song) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Song) GetVocalPatterns() []*VocalPattern {
	if x != nil {
		return x.VocalPatterns
	}
	return nil
}

func (x *Song) GetMusicVideoTypes() []enums.MusicVideoType {
	if x != nil {
		return x.MusicVideoTypes
	}
	return nil
}

var File_master_song_proto protoreflect.FileDescriptor

var file_master_song_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x12, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdc, 0x03, 0x0a, 0x04, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x61, 0x6e, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x61,
	0x6e, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x52, 0x06, 0x6c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x12, 0x30, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x3b, 0x0a, 0x0e, 0x76, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x0d,
	0x76, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x12, 0x41, 0x0a,
	0x11, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53,
	0x68, 0x61, 0x6b, 0x6b, 0x75, 0x75, 0x75, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2d, 0x73, 0x6f,
	0x6e, 0x67, 0x73, 0x2d, 0x6d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_master_song_proto_rawDescOnce sync.Once
	file_master_song_proto_rawDescData []byte
)

func file_master_song_proto_rawDescGZIP() []byte {
	file_master_song_proto_rawDescOnce.Do(func() {
		file_master_song_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_master_song_proto_rawDesc), len(file_master_song_proto_rawDesc)))
	})
	return file_master_song_proto_rawDescData
}

var file_master_song_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_master_song_proto_goTypes = []any{
	(*Song)(nil),                  // 0: master.Song
	(*Artist)(nil),                // 1: master.Artist
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*VocalPattern)(nil),          // 3: master.VocalPattern
	(enums.MusicVideoType)(0),     // 4: enums.MusicVideoType
}
var file_master_song_proto_depIdxs = []int32{
	1, // 0: master.Song.lyrics:type_name -> master.Artist
	1, // 1: master.Song.music:type_name -> master.Artist
	1, // 2: master.Song.arrangement:type_name -> master.Artist
	2, // 3: master.Song.release_time:type_name -> google.protobuf.Timestamp
	3, // 4: master.Song.vocal_patterns:type_name -> master.VocalPattern
	4, // 5: master.Song.music_video_types:type_name -> enums.MusicVideoType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_master_song_proto_init() }
func file_master_song_proto_init() {
	if File_master_song_proto != nil {
		return
	}
	file_master_artist_proto_init()
	file_master_vocal_pattern_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_master_song_proto_rawDesc), len(file_master_song_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_master_song_proto_goTypes,
		DependencyIndexes: file_master_song_proto_depIdxs,
		MessageInfos:      file_master_song_proto_msgTypes,
	}.Build()
	File_master_song_proto = out.File
	file_master_song_proto_goTypes = nil
	file_master_song_proto_depIdxs = nil
}
